name: Java CI with Gradle

# 워크플로우 트리거 설정: main과 dev 브랜치에 push, pull_request 발생 시 실행
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ubuntu-latest  # 가상 환경으로 최신 Ubuntu 설정

    steps:
      # 1. 코드 체크아웃
      - name: 코드 체크아웃
        uses: actions/checkout@v3
        # GitHub Actions가 저장소의 코드를 가져옵니다.

      # 2. JDK 설정
      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
        # Java 17 버전으로 JDK 설정. Gradle을 통해 테스트를 실행할 Java 환경을 준비합니다.

      # 3. Gradle 실행 권한 설정
      - name: Gradle 권한 설정
        run: chmod +x ./gradlew
        # ./gradlew 실행 권한을 설정하여 권한 오류를 방지합니다.

      # 4. Gradle 캐시 설정
      - name: Gradle 패키지 캐시
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle
        # Gradle 캐시 설정을 통해 의존성 다운로드 시간을 절약합니다.

      # 5. 테스트 실행 및 코드 커버리지 리포트 생성
      - name: 테스트 실행 및 코드 커버리지 리포트
        run: ./gradlew test jacocoTestReport --continue
        # Gradle을 사용해 테스트 실행 및 JaCoCo 플러그인으로 코드 커버리지 리포트를 생성합니다.

      # 6. 코드 커버리지 리포트 업로드
      - name: 코드 커버리지 리포트 업로드
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: build/reports/jacoco/test/html/index.html
        # 생성된 JaCoCo 리포트를 GitHub Actions에 업로드해 Artifacts 섹션에서 확인 가능하게 합니다.

      # 7. GitHub PR에 코드 커버리지 알림 표시
      - name: 테스트 실패 알림
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            if (context.payload.pull_request) {
              github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '⚠️ 테스트 실패: 코드 커버리지가 부족하거나 문제가 발생했습니다.'
              });
            } else {
              console.log("This event is not a pull request, so no comment will be created.");
            }
        # PR이 아닐 경우 오류 방지를 위해 조건부 체크를 추가합니다.
