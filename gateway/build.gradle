plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

jacoco {
    toolVersion = "0.8.7"  // Use the appropriate version as needed
}
group = 'com.zerobase'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

// profile의 기본값 local로 설정
ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile

// 리소스 폴더 지정
sourceSets {
    main {
        resources {
            srcDirs "src/main/resources-${profile}"
        }
    }
}

tasks {
    processResources {
        duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
    }
}

dependencies {

//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.1.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway:4.1.5'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.3.5'

    // JWT 필수 의존성
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    //implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.springframework.security:spring-security-test'
}


test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport  // Ensures jacocoTestReport runs after tests
}

jacocoTestReport {
    dependsOn test  // Ensures tests run before generating the report
    reports {
        xml.required = true
        html.required = true
    }
}